CREATE TABLE IF NOT EXISTS mpa
(
    mpa_id   integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    mpa_name varchar(5) NOT NULL CHECK mpa_name <> ''
    );

CREATE TABLE IF NOT EXISTS films
(
    film_id      bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name         varchar(50)  NOT NULL CHECK name <> '',
    description  varchar(200) NOT NULL CHECK LENGTH(description) <= 200 CHECK description <> '',
    release_date date         NOT NULL CHECK release_date >= '1985-12-28',
    duration     integer      NOT NULL CHECK duration > 0,
    mpa_id       integer      NOT NULL,
    CONSTRAINT fk_mpa_id FOREIGN KEY (mpa_id) REFERENCES mpa (mpa_id) ON DELETE SET NULL
    );

CREATE TABLE IF NOT EXISTS users
(
    user_id  bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email    varchar(50) NOT NULL CHECK email LIKE '%_@_%._%',
    login    varchar(50) NOT NULL CHECK login NOT LIKE '% %' CHECK login <> '',
    name     varchar(50) NOT NULL CHECK name <> '',
    birthday date        NOT NULL CHECK birthday < CURRENT_DATE()
    );

CREATE TABLE IF NOT EXISTS user_friends
(
    user_id   bigint,
    friend_id bigint,
    CONSTRAINT fk_user_id FOREIGN KEY (user_id) REFERENCES users (user_id) ON DELETE CASCADE,
    CONSTRAINT fk_friend_id FOREIGN KEY (friend_id) REFERENCES users (user_id) ON DELETE CASCADE,
    CONSTRAINT pk_uf PRIMARY KEY (user_id, friend_id),
    CHECK user_id <> user_friends.friend_id
    );

CREATE TABLE IF NOT EXISTS film_likes
(
    film_id       bigint,
    user_liked_id bigint,
    CONSTRAINT fk_film_id FOREIGN KEY (film_id) REFERENCES films (film_id) ON DELETE CASCADE ,
    CONSTRAINT fk_user_liked_id FOREIGN KEY (user_liked_id) REFERENCES users (user_id) ON DELETE CASCADE,
    CONSTRAINT pk_fl PRIMARY KEY (film_id, user_liked_id)
    );

CREATE TABLE IF NOT EXISTS genres
(
    genre_id   integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    genre_name varchar(20) NOT NULL CHECK genre_name <> ''
    );

CREATE TABLE IF NOT EXISTS film_genres
(
    film_id  bigint,
    genre_id integer,
    CONSTRAINT fk_film_id_genres FOREIGN KEY (film_id) REFERENCES films (film_id) ON DELETE CASCADE,
    CONSTRAINT fk_genre_id FOREIGN KEY (genre_id) REFERENCES genres (genre_id) ON DELETE CASCADE
    );